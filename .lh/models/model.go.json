{
    "sourceFile": "models/model.go",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 60,
            "patches": [
                {
                    "date": 1669340798989,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1669341030386,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n \tSid        string `json:\"sid\"`\n \tParent_id  string `json:\"parent_id\"`\n }\n \n-var AllowedEndpoint = []string{\"Acute Toxicity\", \"Repeated dose toxicity\", \"Aquatic toxicity\"}\n+var AllowedEndpoint = []string{\"Melting/freezing point\", \"Boiling point\", \"Relative density\", \"Vapour pressure\", \"Surface tension\", \"Water solubility\", \"Partition coefficient\", \"pH value\", \"Dissociation constant\", \"Henry's constant\", \"Particle size distribution (Granulometry)\", \"Viscosity\", \"Flash point\", \"Flammability\", \"Explosivness\", \"Auto flammability\", \"Oxidising properties\", \"Stability in organic solvents and identity of relevant degradation products\", \"Corrosiveness to metals\", \"Acute toxicity\", \"Irritation / corrosion\", \"Sensitisation\", \"Mutagenicity/Genotoxicity\", \"Repeated dose toxicity\", \"Reproductive/developmental toxicity\", \"Carcinogenicity\", \"Acute aquatic toxicity\", \"Chronic aquatic toxicity\", \"Terrestrial toxicity\", \"Sediment toxicity\", \"Adsorption/Desorption\", \"Biodegradation\", \"Stability\", \"Bioaccumulation\"}\n \n func CreateTodo(todo *Todo) (err error) {\n \terr = dao.DB.Create(&todo).Error\n \treturn\n"
                },
                {
                    "date": 1669342816397,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,4 +51,13 @@\n \t\treturn nil, err\n \t}\n \treturn\n }\n+\n+//递归查询\n+func CheckEndpoint(id Substance.Sid) (flag bool) {\n+\terr := dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", substance.Sid).Find(&endpoint).Error\n+\tif err != nil {\n+\t\treturn false\n+\t}\n+\treturn true\n+}\n"
                },
                {
                    "date": 1669342830258,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n \treturn\n }\n \n //递归查询\n-func CheckEndpoint(id Substance.Sid) (flag bool) {\n+func CheckEndpoint(id string) (flag bool) {\n \terr := dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", substance.Sid).Find(&endpoint).Error\n \tif err != nil {\n \t\treturn false\n \t}\n"
                },
                {
                    "date": 1669342884165,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,8 +19,15 @@\n \tSid        string `json:\"sid\"`\n \tParent_id  string `json:\"parent_id\"`\n }\n \n+type SubstanceInfo struct {\n+\tID         string `json:\"id\"`\n+\tParent_id  string `json:\"parent_id\"`\n+\tInfo_key   string `json:\"info_key\"`\n+\tInfo_value string `json:\"info_value\"`\n+}\n+\n var AllowedEndpoint = []string{\"Melting/freezing point\", \"Boiling point\", \"Relative density\", \"Vapour pressure\", \"Surface tension\", \"Water solubility\", \"Partition coefficient\", \"pH value\", \"Dissociation constant\", \"Henry's constant\", \"Particle size distribution (Granulometry)\", \"Viscosity\", \"Flash point\", \"Flammability\", \"Explosivness\", \"Auto flammability\", \"Oxidising properties\", \"Stability in organic solvents and identity of relevant degradation products\", \"Corrosiveness to metals\", \"Acute toxicity\", \"Irritation / corrosion\", \"Sensitisation\", \"Mutagenicity/Genotoxicity\", \"Repeated dose toxicity\", \"Reproductive/developmental toxicity\", \"Carcinogenicity\", \"Acute aquatic toxicity\", \"Chronic aquatic toxicity\", \"Terrestrial toxicity\", \"Sediment toxicity\", \"Adsorption/Desorption\", \"Biodegradation\", \"Stability\", \"Bioaccumulation\"}\n \n func CreateTodo(todo *Todo) (err error) {\n \terr = dao.DB.Create(&todo).Error\n@@ -54,9 +61,9 @@\n }\n \n //递归查询\n func CheckEndpoint(id string) (flag bool) {\n-\terr := dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", substance.Sid).Find(&endpoint).Error\n+\terr := dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Find(&endpoint).Error\n \tif err != nil {\n \t\treturn false\n \t}\n \treturn true\n"
                },
                {
                    "date": 1669343530214,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -60,11 +60,11 @@\n \treturn\n }\n \n //递归查询\n-func CheckEndpoint(id string) (flag bool) {\n-\terr := dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Find(&endpoint).Error\n+func CheckEndpoint(id string) (substanceinfo []*SubstanceInfo, err error) {\n+\terr := dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \tif err != nil {\n-\t\treturn false\n+\t\treturn nil, err\n \t}\n-\treturn true\n+\treturn\n }\n"
                },
                {
                    "date": 1669343539111,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n }\n \n //递归查询\n func CheckEndpoint(id string) (substanceinfo []*SubstanceInfo, err error) {\n-\terr := dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n+\terr = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \treturn\n"
                },
                {
                    "date": 1669345680729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,10 +61,27 @@\n }\n \n //递归查询\n func CheckEndpoint(id string) (substanceinfo []*SubstanceInfo, err error) {\n+\t//var fields = []interface{}{\"Description of key information\",\"Applicant's summary and conclusion\",\"Key value for chemical safety assessment\"}\n \terr = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \treturn\n+\n+\t// for _, info := range substanceinfo {\n+\t// \tif inArray(info.Info_key,fields) && info.Info_value != \"\" {\n+\t// \t\treturn true\n+\t// \t}else{\n+\t// \t\treturn CheckEndpoint(info.ID)\n+\t// \t}\n+\t// }\n }\n+func inArray(need interface{}, needArr []interface{}) bool {\n+\tfor _, v := range needArr {\n+\t\tif need == v {\n+\t\t\treturn true\n+\t\t}\n+\t}\n+\treturn false\n+}\n"
                },
                {
                    "date": 1669345688961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,12 +76,13 @@\n \t// \t\treturn CheckEndpoint(info.ID)\n \t// \t}\n \t// }\n }\n-func inArray(need interface{}, needArr []interface{}) bool {\n-\tfor _, v := range needArr {\n-\t\tif need == v {\n-\t\t\treturn true\n-\t\t}\n-\t}\n-\treturn false\n-}\n+\n+// func inArray(need interface{}, needArr []interface{}) bool {\n+// \tfor _, v := range needArr {\n+// \t\tif need == v {\n+// \t\t\treturn true\n+// \t\t}\n+// \t}\n+// \treturn false\n+// }\n"
                },
                {
                    "date": 1669346003823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,9 +62,9 @@\n \n //递归查询\n func CheckEndpoint(id string) (substanceinfo []*SubstanceInfo, err error) {\n \t//var fields = []interface{}{\"Description of key information\",\"Applicant's summary and conclusion\",\"Key value for chemical safety assessment\"}\n-\terr = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n+\terr = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n \tif err != nil {\n \t\treturn nil, err\n \t}\n \treturn\n"
                },
                {
                    "date": 1669346130296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n package models\n \n import (\n \t\"bubble/dao\"\n+\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -66,8 +67,9 @@\n \terr = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n \tif err != nil {\n \t\treturn nil, err\n \t}\n+\tfmt.Println(substanceinfo)\n \treturn\n \n \t// for _, info := range substanceinfo {\n \t// \tif inArray(info.Info_key,fields) && info.Info_value != \"\" {\n"
                },
                {
                    "date": 1669346226065,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,13 @@\n \terr = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tfmt.Println(substanceinfo)\n+\tif substanceinfo == nil {\n+\t\tfmt.Println(1)\n+\t} else {\n+\t\tfmt.Println(2)\n+\t}\n \treturn\n \n \t// for _, info := range substanceinfo {\n \t// \tif inArray(info.Info_key,fields) && info.Info_value != \"\" {\n"
                },
                {
                    "date": 1669346264451,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n \terr = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tif substanceinfo == nil {\n+\tif substanceinfo == NULL {\n \t\tfmt.Println(1)\n \t} else {\n \t\tfmt.Println(2)\n \t}\n"
                },
                {
                    "date": 1669346311946,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n \terr = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tif substanceinfo == NULL {\n+\tif substanceinfo.ID == nil {\n \t\tfmt.Println(1)\n \t} else {\n \t\tfmt.Println(2)\n \t}\n"
                },
                {
                    "date": 1669346466986,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -67,9 +67,9 @@\n \terr = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n \tif err != nil {\n \t\treturn nil, err\n \t}\n-\tif substanceinfo.ID == nil {\n+\tif len(substanceinfo) == 0 {\n \t\tfmt.Println(1)\n \t} else {\n \t\tfmt.Println(2)\n \t}\n"
                },
                {
                    "date": 1669346676304,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n package models\n \n import (\n \t\"bubble/dao\"\n-\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -61,28 +60,22 @@\n \treturn\n }\n \n //递归查询\n-func CheckEndpoint(id string) (substanceinfo []*SubstanceInfo, err error) {\n-\t//var fields = []interface{}{\"Description of key information\",\"Applicant's summary and conclusion\",\"Key value for chemical safety assessment\"}\n-\terr = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n-\tif err != nil {\n-\t\treturn nil, err\n-\t}\n+func CheckEndpoint(id string) (flag bool) {\n+\tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n+\t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n \tif len(substanceinfo) == 0 {\n-\t\tfmt.Println(1)\n-\t} else {\n-\t\tfmt.Println(2)\n+\t\treturn false\n \t}\n-\treturn\n \n-\t// for _, info := range substanceinfo {\n-\t// \tif inArray(info.Info_key,fields) && info.Info_value != \"\" {\n-\t// \t\treturn true\n-\t// \t}else{\n-\t// \t\treturn CheckEndpoint(info.ID)\n-\t// \t}\n-\t// }\n+\tfor _, info := range substanceinfo {\n+\t\tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n+\t\t\treturn true\n+\t\t} else {\n+\t\t\treturn CheckEndpoint(info.ID)\n+\t\t}\n+\t}\n }\n \n // func inArray(need interface{}, needArr []interface{}) bool {\n // \tfor _, v := range needArr {\n"
                },
                {
                    "date": 1669346685450,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,12 +76,12 @@\n \t\t}\n \t}\n }\n \n-// func inArray(need interface{}, needArr []interface{}) bool {\n-// \tfor _, v := range needArr {\n-// \t\tif need == v {\n-// \t\t\treturn true\n-// \t\t}\n-// \t}\n-// \treturn false\n-// }\n+func inArray(need interface{}, needArr []interface{}) bool {\n+\tfor _, v := range needArr {\n+\t\tif need == v {\n+\t\t\treturn true\n+\t\t}\n+\t}\n+\treturn false\n+}\n"
                },
                {
                    "date": 1669346724792,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,8 +61,9 @@\n }\n \n //递归查询\n func CheckEndpoint(id string) (flag bool) {\n+\tvar substanceinfo = new(SubstanceInfo)\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n \tif len(substanceinfo) == 0 {\n \t\treturn false\n"
                },
                {
                    "date": 1669346759950,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -61,9 +61,9 @@\n }\n \n //递归查询\n func CheckEndpoint(id string) (flag bool) {\n-\tvar substanceinfo = new(SubstanceInfo)\n+\tvar substanceinfo = []*SubstanceInfo{}\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n \tif len(substanceinfo) == 0 {\n \t\treturn false\n"
                },
                {
                    "date": 1669346773492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,8 +64,9 @@\n func CheckEndpoint(id string) (flag bool) {\n \tvar substanceinfo = []*SubstanceInfo{}\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n+\n \tif len(substanceinfo) == 0 {\n \t\treturn false\n \t}\n \n"
                },
                {
                    "date": 1669346987993,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -76,8 +76,9 @@\n \t\t} else {\n \t\t\treturn CheckEndpoint(info.ID)\n \t\t}\n \t}\n+\treturn\n }\n \n func inArray(need interface{}, needArr []interface{}) bool {\n \tfor _, v := range needArr {\n"
                },
                {
                    "date": 1669347331389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n //递归查询\n func CheckEndpoint(id string) (flag bool) {\n \tvar substanceinfo = []*SubstanceInfo{}\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n-\t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", 123).Scan(&substanceinfo).Error\n+\t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n \tif len(substanceinfo) == 0 {\n \t\treturn false\n \t}\n"
                },
                {
                    "date": 1669347351750,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n package models\n \n import (\n \t\"bubble/dao\"\n+\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -65,8 +66,9 @@\n \tvar substanceinfo = []*SubstanceInfo{}\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n+\tfmt.Println(substanceinfo)\n \tif len(substanceinfo) == 0 {\n \t\treturn false\n \t}\n \n"
                },
                {
                    "date": 1669347357419,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -66,13 +66,13 @@\n \tvar substanceinfo = []*SubstanceInfo{}\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n-\tfmt.Println(substanceinfo)\n \tif len(substanceinfo) == 0 {\n \t\treturn false\n \t}\n \n+\tfmt.Println(substanceinfo)\n \tfor _, info := range substanceinfo {\n \t\tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n \t\t\treturn true\n \t\t} else {\n"
                },
                {
                    "date": 1669347502799,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,9 @@\n \n \tif len(substanceinfo) == 0 {\n \t\treturn false\n \t}\n-\n-\tfmt.Println(substanceinfo)\n+\tfmt.Printf(\"%+v \\n\", substanceinfo)\n \tfor _, info := range substanceinfo {\n \t\tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n \t\t\treturn true\n \t\t} else {\n"
                },
                {
                    "date": 1669348142492,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n \n \tif len(substanceinfo) == 0 {\n \t\treturn false\n \t}\n-\tfmt.Printf(\"%+v \\n\", substanceinfo)\n+\tfmt.Printf(\"%+v \\n\", &substanceinfo)\n \tfor _, info := range substanceinfo {\n \t\tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n \t\t\treturn true\n \t\t} else {\n"
                },
                {
                    "date": 1669348173572,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n \n \tif len(substanceinfo) == 0 {\n \t\treturn false\n \t}\n-\tfmt.Printf(\"%+v \\n\", &substanceinfo)\n+\tfmt.Printf(\"%+v \\n\", substanceinfo)\n \tfor _, info := range substanceinfo {\n \t\tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n \t\t\treturn true\n \t\t} else {\n"
                },
                {
                    "date": 1669348320580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,11 +62,11 @@\n }\n \n //递归查询\n func CheckEndpoint(id string) (flag bool) {\n-\tvar substanceinfo = []*SubstanceInfo{}\n+\tvar substanceinfo = []SubstanceInfo{}\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n-\t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n+\t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(substanceinfo).Error\n \n \tif len(substanceinfo) == 0 {\n \t\treturn false\n \t}\n"
                },
                {
                    "date": 1669348357095,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -62,11 +62,11 @@\n }\n \n //递归查询\n func CheckEndpoint(id string) (flag bool) {\n-\tvar substanceinfo = []SubstanceInfo{}\n+\tvar substanceinfo = []*SubstanceInfo{}\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n-\t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(substanceinfo).Error\n+\t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n \tif len(substanceinfo) == 0 {\n \t\treturn false\n \t}\n"
                },
                {
                    "date": 1669348538364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,9 +69,9 @@\n \n \tif len(substanceinfo) == 0 {\n \t\treturn false\n \t}\n-\tfmt.Printf(\"%+v \\n\", substanceinfo)\n+\tfmt.Printf(\"%#v \\n\", substanceinfo)\n \tfor _, info := range substanceinfo {\n \t\tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n \t\t\treturn true\n \t\t} else {\n"
                },
                {
                    "date": 1669348604948,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,10 @@\n \n \tif len(substanceinfo) == 0 {\n \t\treturn false\n \t}\n-\tfmt.Printf(\"%#v \\n\", substanceinfo)\n \tfor _, info := range substanceinfo {\n+\t\tfmt.Printf(\"%#v \\n\", info)\n \t\tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n \t\t\treturn true\n \t\t} else {\n \t\t\treturn CheckEndpoint(info.ID)\n"
                },
                {
                    "date": 1669353215224,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n package models\n \n import (\n \t\"bubble/dao\"\n-\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -62,23 +61,24 @@\n }\n \n //递归查询\n func CheckEndpoint(id string) (flag bool) {\n+\t//func CheckEndpoint(id string) (flag bool) {\n \tvar substanceinfo = []*SubstanceInfo{}\n-\tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n+\t//var fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n-\tif len(substanceinfo) == 0 {\n-\t\treturn false\n-\t}\n-\tfor _, info := range substanceinfo {\n-\t\tfmt.Printf(\"%#v \\n\", info)\n-\t\tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n-\t\t\treturn true\n-\t\t} else {\n-\t\t\treturn CheckEndpoint(info.ID)\n-\t\t}\n-\t}\n+\t// if len(substanceinfo) == 0 {\n+\t// \treturn false\n+\t// }\n+\t// for _, info := range substanceinfo {\n+\t// \tfmt.Printf(\"%#v \\n\", info)\n+\t// \tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n+\t// \t\treturn true\n+\t// \t} else {\n+\t// \t\treturn CheckEndpoint(info.ID)\n+\t// \t}\n+\t// }\n \treturn\n }\n \n func inArray(need interface{}, needArr []interface{}) bool {\n"
                },
                {
                    "date": 1669353276973,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n package models\n \n import (\n \t\"bubble/dao\"\n+\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -77,15 +78,19 @@\n \t// \t} else {\n \t// \t\treturn CheckEndpoint(info.ID)\n \t// \t}\n \t// }\n+\n+\tfor _, info := range substanceinfo {\n+\t\tfmt.Printf(\"%#v \\n\", info)\n+\t}\n \treturn\n }\n \n-func inArray(need interface{}, needArr []interface{}) bool {\n-\tfor _, v := range needArr {\n-\t\tif need == v {\n-\t\t\treturn true\n-\t\t}\n-\t}\n-\treturn false\n-}\n+// func inArray(need interface{}, needArr []interface{}) bool {\n+// \tfor _, v := range needArr {\n+// \t\tif need == v {\n+// \t\t\treturn true\n+// \t\t}\n+// \t}\n+// \treturn false\n+// }\n"
                },
                {
                    "date": 1669353288931,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,9 @@\n \n \tfor _, info := range substanceinfo {\n \t\tfmt.Printf(\"%#v \\n\", info)\n \t}\n-\treturn\n+\treturn true\n }\n \n // func inArray(need interface{}, needArr []interface{}) bool {\n // \tfor _, v := range needArr {\n"
                },
                {
                    "date": 1669354986135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,33 +64,34 @@\n //递归查询\n func CheckEndpoint(id string) (flag bool) {\n \t//func CheckEndpoint(id string) (flag bool) {\n \tvar substanceinfo = []*SubstanceInfo{}\n-\t//var fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n+\tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n \t// if len(substanceinfo) == 0 {\n \t// \treturn false\n \t// }\n-\t// for _, info := range substanceinfo {\n-\t// \tfmt.Printf(\"%#v \\n\", info)\n-\t// \tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n-\t// \t\treturn true\n-\t// \t} else {\n-\t// \t\treturn CheckEndpoint(info.ID)\n-\t// \t}\n-\t// }\n-\n \tfor _, info := range substanceinfo {\n-\t\tfmt.Printf(\"%#v \\n\", info)\n+\t\tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n+\t\t\tfmt.Println(\"-------------true--------------\")\n+\t\t\tfmt.Printf(\"%#v \\n\", info)\n+\t\t\t//return true\n+\t\t} else {\n+\t\t\tfmt.Println(\"-------------false--------------\")\n+\t\t\tfmt.Printf(\"%#v \\n\", info)\n+\t\t\tCheckEndpoint(info.ID)\n+\t\t\t//return CheckEndpoint(info.ID)\n+\t\t}\n \t}\n+\n \treturn true\n }\n \n-// func inArray(need interface{}, needArr []interface{}) bool {\n-// \tfor _, v := range needArr {\n-// \t\tif need == v {\n-// \t\t\treturn true\n-// \t\t}\n-// \t}\n-// \treturn false\n-// }\n+func inArray(need interface{}, needArr []interface{}) bool {\n+\tfor _, v := range needArr {\n+\t\tif need == v {\n+\t\t\treturn true\n+\t\t}\n+\t}\n+\treturn false\n+}\n"
                },
                {
                    "date": 1669357189500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,18 +71,20 @@\n \t// if len(substanceinfo) == 0 {\n \t// \treturn false\n \t// }\n \tfor _, info := range substanceinfo {\n-\t\tif inArray(info.Info_key, fields) && info.Info_value != \"\" {\n-\t\t\tfmt.Println(\"-------------true--------------\")\n-\t\t\tfmt.Printf(\"%#v \\n\", info)\n+\t\tif inArray(info.Info_key, fields) {\n+\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n+\t\t\t\tfmt.Println(\"-------------true--------------\" + info.ID)\n+\t\t\t}\n \t\t\t//return true\n \t\t} else {\n-\t\t\tfmt.Println(\"-------------false--------------\")\n-\t\t\tfmt.Printf(\"%#v \\n\", info)\n-\t\t\tCheckEndpoint(info.ID)\n+\t\t\tif info.Info_value != \"\" {\n+\t\t\t\tCheckEndpoint(info.ID)\n+\t\t\t}\n \t\t\t//return CheckEndpoint(info.ID)\n \t\t}\n+\t\tfmt.Printf(\"%#v \\n\", info)\n \t}\n \n \treturn true\n }\n"
                },
                {
                    "date": 1669357244606,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -70,21 +70,24 @@\n \n \t// if len(substanceinfo) == 0 {\n \t// \treturn false\n \t// }\n-\tfor _, info := range substanceinfo {\n-\t\tif inArray(info.Info_key, fields) {\n-\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n-\t\t\t\tfmt.Println(\"-------------true--------------\" + info.ID)\n+\tif len(substanceinfo) > 0 {\n+\t\tfor _, info := range substanceinfo {\n+\t\t\tif inArray(info.Info_key, fields) {\n+\t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n+\t\t\t\t\tfmt.Println(\"-------------true--------------\" + info.ID)\n+\t\t\t\t}\n+\t\t\t\t//return true\n+\t\t\t} else {\n+\t\t\t\tif info.Info_value != \"\" {\n+\t\t\t\t\tCheckEndpoint(info.ID)\n+\t\t\t\t}\n+\t\t\t\t//return CheckEndpoint(info.ID)\n \t\t\t}\n-\t\t\t//return true\n-\t\t} else {\n-\t\t\tif info.Info_value != \"\" {\n-\t\t\t\tCheckEndpoint(info.ID)\n-\t\t\t}\n-\t\t\t//return CheckEndpoint(info.ID)\n+\t\t\tfmt.Printf(\"%#v \\n\", info)\n \t\t}\n-\t\tfmt.Printf(\"%#v \\n\", info)\n+\n \t}\n \n \treturn true\n }\n"
                },
                {
                    "date": 1669357253505,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,9 @@\n \t// if len(substanceinfo) == 0 {\n \t// \treturn false\n \t// }\n \tif len(substanceinfo) > 0 {\n+\n \t\tfor _, info := range substanceinfo {\n \t\t\tif inArray(info.Info_key, fields) {\n \t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n \t\t\t\t\tfmt.Println(\"-------------true--------------\" + info.ID)\n"
                },
                {
                    "date": 1669357261271,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,9 +71,8 @@\n \t// if len(substanceinfo) == 0 {\n \t// \treturn false\n \t// }\n \tif len(substanceinfo) > 0 {\n-\n \t\tfor _, info := range substanceinfo {\n \t\t\tif inArray(info.Info_key, fields) {\n \t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n \t\t\t\t\tfmt.Println(\"-------------true--------------\" + info.ID)\n"
                },
                {
                    "date": 1669357445161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n package models\n \n import (\n \t\"bubble/dao\"\n-\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -74,23 +73,21 @@\n \tif len(substanceinfo) > 0 {\n \t\tfor _, info := range substanceinfo {\n \t\t\tif inArray(info.Info_key, fields) {\n \t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n-\t\t\t\t\tfmt.Println(\"-------------true--------------\" + info.ID)\n+\t\t\t\t\treturn true\n \t\t\t\t}\n-\t\t\t\t//return true\n \t\t\t} else {\n \t\t\t\tif info.Info_value != \"\" {\n \t\t\t\t\tCheckEndpoint(info.ID)\n \t\t\t\t}\n-\t\t\t\t//return CheckEndpoint(info.ID)\n \t\t\t}\n-\t\t\tfmt.Printf(\"%#v \\n\", info)\n \t\t}\n \n+\t} else {\n+\t\treturn false\n \t}\n \n-\treturn true\n }\n \n func inArray(need interface{}, needArr []interface{}) bool {\n \tfor _, v := range needArr {\n"
                },
                {
                    "date": 1669357487169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,12 +82,10 @@\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \n-\t} else {\n-\t\treturn false\n \t}\n-\n+\treturn\n }\n \n func inArray(need interface{}, needArr []interface{}) bool {\n \tfor _, v := range needArr {\n"
                },
                {
                    "date": 1669357643579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n \t\t\t}\n \t\t}\n \n \t}\n-\treturn\n+\treturn false\n }\n \n func inArray(need interface{}, needArr []interface{}) bool {\n \tfor _, v := range needArr {\n"
                },
                {
                    "date": 1669357690788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n package models\n \n import (\n \t\"bubble/dao\"\n+\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -66,15 +67,13 @@\n \tvar substanceinfo = []*SubstanceInfo{}\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n-\t// if len(substanceinfo) == 0 {\n-\t// \treturn false\n-\t// }\n \tif len(substanceinfo) > 0 {\n \t\tfor _, info := range substanceinfo {\n \t\t\tif inArray(info.Info_key, fields) {\n \t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n+\t\t\t\t\tfmt.Println(\"-----true------\" + info.ID)\n \t\t\t\t\treturn true\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tif info.Info_value != \"\" {\n"
                },
                {
                    "date": 1669358125230,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n package models\n \n import (\n \t\"bubble/dao\"\n-\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -71,9 +70,9 @@\n \tif len(substanceinfo) > 0 {\n \t\tfor _, info := range substanceinfo {\n \t\t\tif inArray(info.Info_key, fields) {\n \t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n-\t\t\t\t\tfmt.Println(\"-----true------\" + info.ID)\n+\t\t\t\t\t//fmt.Println(\"-----true------\" + info.ID)\n \t\t\t\t\treturn true\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tif info.Info_value != \"\" {\n"
                },
                {
                    "date": 1669358781909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,9 +75,9 @@\n \t\t\t\t\treturn true\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tif info.Info_value != \"\" {\n-\t\t\t\t\tCheckEndpoint(info.ID)\n+\t\t\t\t\treturn CheckEndpoint(info.ID)\n \t\t\t\t}\n \t\t\t}\n \t\t}\n \n"
                },
                {
                    "date": 1669358787885,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n package models\n \n import (\n \t\"bubble/dao\"\n+\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -70,9 +71,9 @@\n \tif len(substanceinfo) > 0 {\n \t\tfor _, info := range substanceinfo {\n \t\t\tif inArray(info.Info_key, fields) {\n \t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n-\t\t\t\t\t//fmt.Println(\"-----true------\" + info.ID)\n+\t\t\t\t\tfmt.Println(\"-----true------\" + info.ID)\n \t\t\t\t\treturn true\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tif info.Info_value != \"\" {\n"
                },
                {
                    "date": 1669360203984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n package models\n \n import (\n \t\"bubble/dao\"\n-\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -27,9 +26,10 @@\n \tInfo_key   string `json:\"info_key\"`\n \tInfo_value string `json:\"info_value\"`\n }\n \n-var AllowedEndpoint = []string{\"Melting/freezing point\", \"Boiling point\", \"Relative density\", \"Vapour pressure\", \"Surface tension\", \"Water solubility\", \"Partition coefficient\", \"pH value\", \"Dissociation constant\", \"Henry's constant\", \"Particle size distribution (Granulometry)\", \"Viscosity\", \"Flash point\", \"Flammability\", \"Explosivness\", \"Auto flammability\", \"Oxidising properties\", \"Stability in organic solvents and identity of relevant degradation products\", \"Corrosiveness to metals\", \"Acute toxicity\", \"Irritation / corrosion\", \"Sensitisation\", \"Mutagenicity/Genotoxicity\", \"Repeated dose toxicity\", \"Reproductive/developmental toxicity\", \"Carcinogenicity\", \"Acute aquatic toxicity\", \"Chronic aquatic toxicity\", \"Terrestrial toxicity\", \"Sediment toxicity\", \"Adsorption/Desorption\", \"Biodegradation\", \"Stability\", \"Bioaccumulation\"}\n+//var AllowedEndpoint = []string{\"Melting/freezing point\", \"Boiling point\", \"Relative density\", \"Vapour pressure\", \"Surface tension\", \"Water solubility\", \"Partition coefficient\", \"pH value\", \"Dissociation constant\", \"Henry's constant\", \"Particle size distribution (Granulometry)\", \"Viscosity\", \"Flash point\", \"Flammability\", \"Explosivness\", \"Auto flammability\", \"Oxidising properties\", \"Stability in organic solvents and identity of relevant degradation products\", \"Corrosiveness to metals\", \"Acute toxicity\", \"Irritation / corrosion\", \"Sensitisation\", \"Mutagenicity/Genotoxicity\", \"Repeated dose toxicity\", \"Reproductive/developmental toxicity\", \"Carcinogenicity\", \"Acute aquatic toxicity\", \"Chronic aquatic toxicity\", \"Terrestrial toxicity\", \"Sediment toxicity\", \"Adsorption/Desorption\", \"Biodegradation\", \"Stability\", \"Bioaccumulation\"}\n+var AllowedEndpoint = []string{\"Biodegradation\"}\n \n func CreateTodo(todo *Todo) (err error) {\n \terr = dao.DB.Create(&todo).Error\n \treturn\n@@ -71,9 +71,9 @@\n \tif len(substanceinfo) > 0 {\n \t\tfor _, info := range substanceinfo {\n \t\t\tif inArray(info.Info_key, fields) {\n \t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n-\t\t\t\t\tfmt.Println(\"-----true------\" + info.ID)\n+\t\t\t\t\t//fmt.Println(\"-----true------\" + info.ID)\n \t\t\t\t\treturn true\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tif info.Info_value != \"\" {\n"
                },
                {
                    "date": 1669360242244,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,9 @@\n package models\n \n import (\n \t\"bubble/dao\"\n+\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -79,8 +80,9 @@\n \t\t\t\tif info.Info_value != \"\" {\n \t\t\t\t\treturn CheckEndpoint(info.ID)\n \t\t\t\t}\n \t\t\t}\n+\t\t\tfmt.Printf(\"---------\".info.ID)\n \t\t}\n \n \t}\n \treturn false\n"
                },
                {
                    "date": 1669360261556,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n \t\t\t\tif info.Info_value != \"\" {\n \t\t\t\t\treturn CheckEndpoint(info.ID)\n \t\t\t\t}\n \t\t\t}\n-\t\t\tfmt.Printf(\"---------\".info.ID)\n+\t\t\tfmt.Println(\"---------\".info.ID)\n \t\t}\n \n \t}\n \treturn false\n"
                },
                {
                    "date": 1669360268171,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n \t\t\t\tif info.Info_value != \"\" {\n \t\t\t\t\treturn CheckEndpoint(info.ID)\n \t\t\t\t}\n \t\t\t}\n-\t\t\tfmt.Println(\"---------\".info.ID)\n+\t\t\tfmt.Println(\"---------\" + info.ID)\n \t\t}\n \n \t}\n \treturn false\n"
                },
                {
                    "date": 1669360361813,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,8 +68,9 @@\n \tvar substanceinfo = []*SubstanceInfo{}\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n+\tfmt.Println(len(substanceinfo))\n \tif len(substanceinfo) > 0 {\n \t\tfor _, info := range substanceinfo {\n \t\t\tif inArray(info.Info_key, fields) {\n \t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n"
                },
                {
                    "date": 1669360505321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -71,8 +71,9 @@\n \n \tfmt.Println(len(substanceinfo))\n \tif len(substanceinfo) > 0 {\n \t\tfor _, info := range substanceinfo {\n+\t\t\tfmt.Printf(\"%+v \\n\", info)\n \t\t\tif inArray(info.Info_key, fields) {\n \t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n \t\t\t\t\t//fmt.Println(\"-----true------\" + info.ID)\n \t\t\t\t\treturn true\n"
                },
                {
                    "date": 1669360579264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,9 @@\n \t\t\t\t\treturn true\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tif info.Info_value != \"\" {\n-\t\t\t\t\treturn CheckEndpoint(info.ID)\n+\t\t\t\t\tCheckEndpoint(info.ID)\n \t\t\t\t}\n \t\t\t}\n \t\t\tfmt.Println(\"---------\" + info.ID)\n \t\t}\n"
                },
                {
                    "date": 1669360876787,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,9 +86,9 @@\n \t\t\tfmt.Println(\"---------\" + info.ID)\n \t\t}\n \n \t}\n-\treturn false\n+\treturn\n }\n \n func inArray(need interface{}, needArr []interface{}) bool {\n \tfor _, v := range needArr {\n"
                },
                {
                    "date": 1669361523538,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -79,9 +79,12 @@\n \t\t\t\t\treturn true\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tif info.Info_value != \"\" {\n-\t\t\t\t\tCheckEndpoint(info.ID)\n+\t\t\t\t\tflag = CheckEndpoint(info.ID)\n+\t\t\t\t\tif flag {\n+\t\t\t\t\t\treturn true\n+\t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t\tfmt.Println(\"---------\" + info.ID)\n \t\t}\n"
                },
                {
                    "date": 1669361675616,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,8 @@\n package models\n \n import (\n \t\"bubble/dao\"\n-\t\"fmt\"\n )\n \n type Todo struct {\n \tID     int    `json:\"id\"`\n@@ -68,26 +67,23 @@\n \tvar substanceinfo = []*SubstanceInfo{}\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n-\tfmt.Println(len(substanceinfo))\n \tif len(substanceinfo) > 0 {\n \t\tfor _, info := range substanceinfo {\n-\t\t\tfmt.Printf(\"%+v \\n\", info)\n \t\t\tif inArray(info.Info_key, fields) {\n \t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n-\t\t\t\t\t//fmt.Println(\"-----true------\" + info.ID)\n \t\t\t\t\treturn true\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tif info.Info_value != \"\" {\n \t\t\t\t\tflag = CheckEndpoint(info.ID)\n+\t\t\t\t\t//如果最终找到结果，则立即返回不继续循环，如果没有则继续循环\n \t\t\t\t\tif flag {\n \t\t\t\t\t\treturn true\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n-\t\t\tfmt.Println(\"---------\" + info.ID)\n \t\t}\n \n \t}\n \treturn\n"
                },
                {
                    "date": 1669361687525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -26,11 +26,12 @@\n \tInfo_key   string `json:\"info_key\"`\n \tInfo_value string `json:\"info_value\"`\n }\n \n-//var AllowedEndpoint = []string{\"Melting/freezing point\", \"Boiling point\", \"Relative density\", \"Vapour pressure\", \"Surface tension\", \"Water solubility\", \"Partition coefficient\", \"pH value\", \"Dissociation constant\", \"Henry's constant\", \"Particle size distribution (Granulometry)\", \"Viscosity\", \"Flash point\", \"Flammability\", \"Explosivness\", \"Auto flammability\", \"Oxidising properties\", \"Stability in organic solvents and identity of relevant degradation products\", \"Corrosiveness to metals\", \"Acute toxicity\", \"Irritation / corrosion\", \"Sensitisation\", \"Mutagenicity/Genotoxicity\", \"Repeated dose toxicity\", \"Reproductive/developmental toxicity\", \"Carcinogenicity\", \"Acute aquatic toxicity\", \"Chronic aquatic toxicity\", \"Terrestrial toxicity\", \"Sediment toxicity\", \"Adsorption/Desorption\", \"Biodegradation\", \"Stability\", \"Bioaccumulation\"}\n-var AllowedEndpoint = []string{\"Biodegradation\"}\n+var AllowedEndpoint = []string{\"Melting/freezing point\", \"Boiling point\", \"Relative density\", \"Vapour pressure\", \"Surface tension\", \"Water solubility\", \"Partition coefficient\", \"pH value\", \"Dissociation constant\", \"Henry's constant\", \"Particle size distribution (Granulometry)\", \"Viscosity\", \"Flash point\", \"Flammability\", \"Explosivness\", \"Auto flammability\", \"Oxidising properties\", \"Stability in organic solvents and identity of relevant degradation products\", \"Corrosiveness to metals\", \"Acute toxicity\", \"Irritation / corrosion\", \"Sensitisation\", \"Mutagenicity/Genotoxicity\", \"Repeated dose toxicity\", \"Reproductive/developmental toxicity\", \"Carcinogenicity\", \"Acute aquatic toxicity\", \"Chronic aquatic toxicity\", \"Terrestrial toxicity\", \"Sediment toxicity\", \"Adsorption/Desorption\", \"Biodegradation\", \"Stability\", \"Bioaccumulation\"}\n \n+//var AllowedEndpoint = []string{\"Biodegradation\"}\n+\n func CreateTodo(todo *Todo) (err error) {\n \terr = dao.DB.Create(&todo).Error\n \treturn\n }\n"
                },
                {
                    "date": 1669362270141,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,9 +63,9 @@\n }\n \n //递归查询\n func CheckEndpoint(id string) (flag bool) {\n-\t//func CheckEndpoint(id string) (flag bool) {\n+\treturn true\n \tvar substanceinfo = []*SubstanceInfo{}\n \tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n"
                },
                {
                    "date": 1669362275390,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -64,31 +64,31 @@\n \n //递归查询\n func CheckEndpoint(id string) (flag bool) {\n \treturn true\n-\tvar substanceinfo = []*SubstanceInfo{}\n-\tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n-\t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n+\t// var substanceinfo = []*SubstanceInfo{}\n+\t// var fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n+\t// _ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n-\tif len(substanceinfo) > 0 {\n-\t\tfor _, info := range substanceinfo {\n-\t\t\tif inArray(info.Info_key, fields) {\n-\t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n-\t\t\t\t\treturn true\n-\t\t\t\t}\n-\t\t\t} else {\n-\t\t\t\tif info.Info_value != \"\" {\n-\t\t\t\t\tflag = CheckEndpoint(info.ID)\n-\t\t\t\t\t//如果最终找到结果，则立即返回不继续循环，如果没有则继续循环\n-\t\t\t\t\tif flag {\n-\t\t\t\t\t\treturn true\n-\t\t\t\t\t}\n-\t\t\t\t}\n-\t\t\t}\n-\t\t}\n+\t// if len(substanceinfo) > 0 {\n+\t// \tfor _, info := range substanceinfo {\n+\t// \t\tif inArray(info.Info_key, fields) {\n+\t// \t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n+\t// \t\t\t\treturn true\n+\t// \t\t\t}\n+\t// \t\t} else {\n+\t// \t\t\tif info.Info_value != \"\" {\n+\t// \t\t\t\tflag = CheckEndpoint(info.ID)\n+\t// \t\t\t\t//如果最终找到结果，则立即返回不继续循环，如果没有则继续循环\n+\t// \t\t\t\tif flag {\n+\t// \t\t\t\t\treturn true\n+\t// \t\t\t\t}\n+\t// \t\t\t}\n+\t// \t\t}\n+\t// \t}\n \n-\t}\n-\treturn\n+\t// }\n+\t// return\n }\n \n func inArray(need interface{}, needArr []interface{}) bool {\n \tfor _, v := range needArr {\n"
                },
                {
                    "date": 1669374531746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -63,32 +63,31 @@\n }\n \n //递归查询\n func CheckEndpoint(id string) (flag bool) {\n-\treturn true\n-\t// var substanceinfo = []*SubstanceInfo{}\n-\t// var fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n-\t// _ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n+\tvar substanceinfo = []*SubstanceInfo{}\n+\tvar fields = []interface{}{\"Description of key information\", \"Applicant's summary and conclusion\", \"Key value for chemical safety assessment\"}\n+\t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n-\t// if len(substanceinfo) > 0 {\n-\t// \tfor _, info := range substanceinfo {\n-\t// \t\tif inArray(info.Info_key, fields) {\n-\t// \t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n-\t// \t\t\t\treturn true\n-\t// \t\t\t}\n-\t// \t\t} else {\n-\t// \t\t\tif info.Info_value != \"\" {\n-\t// \t\t\t\tflag = CheckEndpoint(info.ID)\n-\t// \t\t\t\t//如果最终找到结果，则立即返回不继续循环，如果没有则继续循环\n-\t// \t\t\t\tif flag {\n-\t// \t\t\t\t\treturn true\n-\t// \t\t\t\t}\n-\t// \t\t\t}\n-\t// \t\t}\n-\t// \t}\n+\tif len(substanceinfo) > 0 {\n+\t\tfor _, info := range substanceinfo {\n+\t\t\tif inArray(info.Info_key, fields) {\n+\t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n+\t\t\t\t\treturn true\n+\t\t\t\t}\n+\t\t\t} else {\n+\t\t\t\tif info.Info_value != \"\" {\n+\t\t\t\t\tflag = CheckEndpoint(info.ID)\n+\t\t\t\t\t//如果最终找到结果，则立即返回不继续循环，如果没有则继续循环\n+\t\t\t\t\tif flag {\n+\t\t\t\t\t\treturn true\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n \n-\t// }\n-\t// return\n+\t}\n+\treturn\n }\n \n func inArray(need interface{}, needArr []interface{}) bool {\n \tfor _, v := range needArr {\n"
                },
                {
                    "date": 1669375082762,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -69,10 +69,10 @@\n \t_ = dao.DB.Table(\"substance_info\").Select(\"id, parent_id,info_key,info_value\").Where(\"parent_id = ? \", id).Scan(&substanceinfo).Error\n \n \tif len(substanceinfo) > 0 {\n \t\tfor _, info := range substanceinfo {\n-\t\t\tif inArray(info.Info_key, fields) {\n-\t\t\t\tif info.Info_value != \"\" && !inArray(info.Info_value, fields) {\n+\t\t\tif InArray(info.Info_key, fields) {\n+\t\t\t\tif info.Info_value != \"\" && !InArray(info.Info_value, fields) {\n \t\t\t\t\treturn true\n \t\t\t\t}\n \t\t\t} else {\n \t\t\t\tif info.Info_value != \"\" {\n@@ -88,9 +88,9 @@\n \t}\n \treturn\n }\n \n-func inArray(need interface{}, needArr []interface{}) bool {\n+func InArray(need interface{}, needArr []interface{}) bool {\n \tfor _, v := range needArr {\n \t\tif need == v {\n \t\t\treturn true\n \t\t}\n"
                }
            ],
            "date": 1669340798989,
            "name": "Commit-0",
            "content": "package models\n\nimport (\n\t\"bubble/dao\"\n)\n\ntype Todo struct {\n\tID     int    `json:\"id\"`\n\tTitle  string `json:\"title\"`\n\tStatus string `json:\"status\"`\n}\n\ntype Substance struct {\n\tName       string `json:\"name\"`\n\tCas_no     string `json:\"cas_no\"`\n\tList_no    string `json:\"ec_no\"`\n\tInfo_key   string `json:\"info_key\"`\n\tInfo_value string `json:\"info_value\"`\n\tSid        string `json:\"sid\"`\n\tParent_id  string `json:\"parent_id\"`\n}\n\nvar AllowedEndpoint = []string{\"Acute Toxicity\", \"Repeated dose toxicity\", \"Aquatic toxicity\"}\n\nfunc CreateTodo(todo *Todo) (err error) {\n\terr = dao.DB.Create(&todo).Error\n\treturn\n}\n\nfunc GetTodoList() (todo []*Todo, err error) {\n\terr = dao.DB.Find(&todo).Error\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn\n}\n\nfunc UpdateTodo(todo map[string]interface{}, id string) (err error) {\n\terr = dao.DB.Table(\"todos\").Where(\"id = ?\", id).Updates(todo).Error\n\treturn\n}\n\nfunc DeleteTodo(id string) (err error) {\n\terr = dao.DB.Where(\"id = ?\", id).Delete(&Todo{}).Error\n\treturn\n}\n\nfunc GetEndpointList() (endpoint []*Substance, err error) {\n\terr = dao.DB.Table(\"substance\").Select(\"substance.name, substance.cas_no,substance.list_no,substance_info.id as sid,substance_info.parent_id,substance_info.info_key,substance_info.info_value\").Joins(\"left join substance_info on substance_info.substance_id = substance.id\").Where(\"substance.id = ? and substance_info.info_key IN (?) \", 100, AllowedEndpoint).Scan(&endpoint).Error\n\tif err != nil {\n\t\treturn nil, err\n\t}\n\treturn\n}\n"
        }
    ]
}